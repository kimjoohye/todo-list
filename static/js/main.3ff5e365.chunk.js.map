{"version":3,"sources":["components/styledComp.js","reducer/Todo.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoTemplate.js","App.js","index.js"],"names":["DoTemplate","styled","div","DoHead","Input","input","InputButton","button","DoList","Remove","Update","props","isComplete","DoItem","CheckSqure","TextBox","TextDiv","TODO_INSERT","TODO_REMOVE","TODO_UPDATE","TODO_TOGGLE","initState","todos","id","text","TodoHead","today","Date","date","getFullYear","getMonth","getDate","getDay","useState","todoInput","setodoInput","nextId","useRef","dispatch","useDispatch","TodoAdd","length","current","type","payload","className","onSubmit","e","preventDefault","onChange","target","value","onKeyPress","key","placeholder","onClick","TodoItem","todo","edited","setEdited","focus","onClickEdit","useEffect","todoToggle","defaultValue","todoUpdate","ref","todoRemove","TodoList","useSelector","state","console","log","untesk","filter","map","TodoTemplate","App","store","createStore","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ff5e365.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const DoTemplate = styled.div`\r\nwidth: 500px;\r\nheight: 700px;\r\n\r\nposition: relative;\r\nbackground-color: #F9F9F9;\r\nmargin: 0 auto 50px;\r\nborder-radius: 40px;\r\n\r\ndisplay: flex;\r\nflex-direction: column;\r\n`\r\n\r\nexport const DoHead = styled.div`\r\npadding: 30px 20px 30px 30px;\r\nborder-bottom : 2px solid #94B3FD;\r\n\r\n.headDate{\r\n    font-size: 26px;\r\n}\r\n`\r\n\r\nexport const Input = styled.input`\r\n    margin-top: 30px;\r\n    width: 350px; height: 35px;\r\n    border: 2px solid gray;\r\n    border-radius: 10px;\r\n    outline: none;\r\n    padding-left: 10px;\r\n\r\n    &::placeholder{\r\n        color: #e5e5e5;\r\n    }\r\n`\r\n\r\nexport const InputButton = styled.button`\r\nwidth: 30px; height: 30px;\r\nborder-radius: 15px;\r\nbackground-color: #94B3FD;\r\noutline: none;\r\nborder: none;\r\n\r\nposition: absolute;\r\ntop: 98px; right:67px;\r\n\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n\r\n&:hover{\r\n    background-color: #5e8bf3;\r\n    transition: background-color 0.3s; \r\n}\r\n`\r\n\r\nexport const DoList = styled.div`\r\nheight: 100%;\r\npadding: 0px 13px 13px 30px;\r\n\r\n.workLeft{\r\n    font-size: 17px;\r\n    margin-top: 25px;\r\n    color: #94B3FD;\r\n}\r\n`\r\n//할 일\r\nexport const Remove = styled.div`\r\nfont-size: 25px;\r\ncolor: gray;\r\ncursor: pointer;\r\n\r\n&:hover{\r\n    color: red;\r\n    transform: color 0.3;\r\n}\r\n`\r\nexport const Update = styled.div`\r\nfont-size: 25px;\r\ncolor: gray;\r\nmargin-right: 10px;\r\ncursor: pointer;\r\n&:hover{\r\n    color: ${props => props.isComplete ? 'gray' : '#94B3FD'};\r\n    transform: color 0.3;\r\n}\r\n`\r\n\r\nexport const DoItem = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-top: 5px;\r\n`\r\n\r\nexport const CheckSqure = styled.div`\r\nwidth: 27px;\r\nheight: 27px;\r\nborder: 2px solid ${props=>props.isComplete ? '#94B3FD': 'gray'};\r\nborder-radius: 10px;\r\ncursor: pointer;\r\n\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 25px;\r\ncolor: ${props => props.isComplete ? '#94B3FD' : 'black'}\r\n`\r\n\r\nexport const TextBox = styled.input`\r\npadding: 5px 5px 5px 10px;\r\nwidth: 343px;\r\nheight: 30px;\r\nfont-size: 20px;\r\nborder: none;\r\noutline: none;\r\nbackground-color: transparent;\r\n`\r\n\r\nexport const TextDiv = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\npadding: 5px 5px 5px 10px;\r\nwidth: 343px;\r\nheight: 30px;\r\nfont-size: 20px;\r\n\r\ntext-decoration: ${props => props.isComplete ? 'line-through': 'none'};\r\ncolor: ${props => props.isComplete ? 'gray': 'black'};\r\ntransform: all 0.7s;\r\n`\r\n\r\n","const TODO_INSERT = \"TODO/INSERT\";\r\nconst TODO_REMOVE = \"TODO/REMOVE\";\r\nconst TODO_UPDATE = \"TODO/UPDATE\";\r\nconst TODO_TOGGLE = \"TODO/TOGGLE\";\r\n\r\nexport const todoInsert = (id, text) => {\r\n    return {\r\n        type: TODO_INSERT,\r\n        payload: {\r\n            id: id,\r\n            text: text,\r\n            isComplete: false\r\n    }}\r\n}\r\n\r\nexport const todoRemove = (id) => {\r\n    return {\r\n        type: TODO_REMOVE,\r\n        payload: {\r\n            id: id\r\n        }\r\n    }\r\n}\r\n\r\nexport const todoUpdate = (id, text) => {\r\n    return {\r\n        type: TODO_UPDATE,\r\n        payload: {\r\n            id: id,\r\n            text: text\r\n        }\r\n    }\r\n}\r\n\r\nexport const todoToggle = (id) => {\r\n    return {\r\n        type: TODO_TOGGLE,\r\n        payload: {\r\n            id: id\r\n        }\r\n    }\r\n}\r\n\r\nconst initState = {\r\n    todos: [\r\n        {\r\n            id: 1,\r\n            text: \"todolist프로젝트 하기\",\r\n            isComplete: false\r\n        },\r\n    ]\r\n}\r\n\r\nexport default function todoReducer(state = initState, {type, payload}){\r\n    switch(type){\r\n        case TODO_INSERT:\r\n            return {\r\n                todos: state.todos.concat({\r\n                    id: payload.id,\r\n                    text: payload.text,\r\n                    isComplete: false\r\n                })\r\n            }\r\n        case TODO_REMOVE:\r\n            return {\r\n                todos: state.todos.filter((todo) => todo.id !== payload.id)\r\n            }\r\n        case TODO_UPDATE:\r\n            return {\r\n                todos: state.todos.map((todo)=> todo.id === payload.id ? {...todo, text: payload.text} : todo)\r\n            }\r\n        case TODO_TOGGLE:\r\n            return {\r\n                todos: state.todos.map((todo) => todo.id === payload.id ? {...todo, isComplete: !todo.isComplete} : todo)\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport {DoHead,Input,InputButton} from './styledComp'\r\nimport { IoMdAdd } from \"react-icons/io\"\r\nimport { todoInsert } from '../reducer/Todo'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction TodoHead(){\r\n    const today = new Date();\r\n    var week = ['일', '월', '화', '수', '목', '금', '토'];\r\n    const date = today.getFullYear() + \"년 \" + (today.getMonth()+1) + \"월 \"\r\n     + today.getDate() +\"일 \" + week[today.getDay()]+\"요일\";\r\n\r\n     const [todoInput, setodoInput] = useState(\"\");\r\n     const nextId = useRef(2);\r\n\r\n     const dispatch = useDispatch();\r\n\r\n     const onremove = ()=> {\r\n         setodoInput(\"\");\r\n     };\r\n     \r\n     const onChangeInput = (e) => {\r\n         setodoInput(e.target.value);\r\n     };\r\n\r\n     const keyPress = (e) => {\r\n         if(e.key === \"Enter\"){\r\n             TodoAdd();\r\n         }\r\n     };\r\n\r\n     const TodoAdd = () => {\r\n         if(todoInput.length === 0){\r\n             return;\r\n         }\r\n         dispatch(todoInsert(nextId.current, todoInput));\r\n         nextId.current += 1;\r\n         onremove();\r\n     };\r\n\r\n     const onsubmit = (e) => {\r\n         e.preventDefault();\r\n     }\r\n\r\n    return <DoHead>\r\n        <div className=\"headDate\">{date}</div>\r\n        <form onSubmit={onsubmit}>\r\n            <Input\r\n            onChange={onChangeInput}\r\n            onKeyPress={keyPress}\r\n            value={todoInput} \r\n            placeholder=\"할 일을 입력하세요\"/>\r\n\r\n            <InputButton onClick={TodoAdd}>\r\n                <IoMdAdd/>\r\n            </InputButton>\r\n        </form>\r\n    </DoHead>\r\n}\r\n\r\nexport default TodoHead","import React, {useState, useRef, useEffect} from 'react'\r\nimport { IoMdCheckmark, IoMdCreate,IoIosTrash } from 'react-icons/io'\r\nimport { useDispatch } from 'react-redux';\r\nimport { todoRemove, todoToggle, todoUpdate } from '../reducer/Todo';\r\nimport { Remove, DoItem, CheckSqure, Update, TextBox, TextDiv } from './styledComp'\r\n\r\nconst TodoItem = props => {\r\n    const { id, text, isComplete } = props.todo;\r\n\r\n    const [edited, setEdited] = useState(false);\r\n    const focus = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    const onClickEdit = () => {\r\n        if(isComplete === false)\r\n          setEdited(!edited);\r\n    }\r\n\r\n    const keyPress = (e) => {\r\n        if(e.key === \"Enter\"){\r\n            dispatch(todoUpdate(id, e.target.value));\r\n            onClickEdit();\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(edited){\r\n            focus.current.focus();\r\n        }\r\n    },[edited])\r\n    return <DoItem>\r\n        {/* 체크박스 */}\r\n        <CheckSqure\r\n        isComplete={isComplete} \r\n        onClick = {() => dispatch(todoToggle(id))}>\r\n            { isComplete ? <IoMdCheckmark />: <></>}\r\n        </CheckSqure>\r\n\r\n        {/* 내용 */}\r\n        {edited ? <TextBox type=\"text\" \r\n        defaultValue={text} \r\n        onKeyPress={keyPress}\r\n        ref={focus}/>\r\n        : <TextDiv isComplete={isComplete}>{text}</TextDiv>}\r\n\r\n        {/* 수정 버튼 */}\r\n        <Update isComplete={isComplete} onClick={()=> onClickEdit()}>\r\n            <IoMdCreate />\r\n        </Update>\r\n\r\n        {/* 삭제 버튼 */}\r\n        <Remove onClick={() => dispatch(todoRemove(id))}>\r\n            <IoIosTrash />\r\n        </Remove>\r\n    </DoItem>\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport { DoList } from './styledComp'\r\nimport TodoItem from './TodoItem'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction TodoList(){\r\n  const todos = useSelector((state) => state.todos);\r\n  console.log(todos);\r\n  const untesk = todos.filter(todo => todo.isComplete === false);\r\n    return <>\r\n    <DoList>\r\n      <div className=\"workLeft\">할 일 {untesk.length}개 남음</div>\r\n      <div className=\"dowork\">\r\n        { todos.map((todo)=>{\r\n          return <TodoItem key={todo.id} todo={todo} />\r\n        }) }\r\n      </div>\r\n    </DoList>\r\n    </>\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\nimport {DoTemplate} from './styledComp'\r\nimport TodoHead from './TodoHead'\r\nimport TodoList from './TodoList'\r\nimport '../styles/App-style.scss'\r\n\r\nfunction TodoTemplate(){\r\n    return <>\r\n    <h1 className=\"title\">To-do List</h1>\r\n    <DoTemplate>\r\n        <TodoHead />\r\n        <TodoList />\r\n    </DoTemplate>\r\n    </>\r\n}\r\n\r\nexport default TodoTemplate","import React from 'react'\nimport TodoTemplate from './components/TodoTemplate'\n\nfunction App(){\n    return <>\n    <TodoTemplate></TodoTemplate>\n    </>\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport todoReducer from './reducer/Todo';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nconst store = createStore(todoReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}